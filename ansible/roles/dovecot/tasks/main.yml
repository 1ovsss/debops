---
# Copyright (C) 2015      Reto Gantenbein <reto.gantenbein@linuxmonk.ch>
# Copyright (C) 2017-2020 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2015-2020 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Import custom Ansible plugins
  import_role:
    name: 'ansible_plugins'

- name: Import DebOps global handlers
  import_role:
    name: 'global_handlers'

- name: Pre hooks
  include: "{{ lookup('debops.debops.task_src', 'dovecot/pre_main.yml') }}"

- name: Install Dovecot packages
  package:
    name: '{{ q("flattened", ([ "dovecot-core" ]
                              + ([ "dovecot-imapd" ]
                                 if ("imap" in dovecot_protocols or
                                     "imaps" in dovecot_protocols)
                                 else [])
                              + ([ "dovecot-pop3d" ]
                                 if ("pop3" in dovecot_protocols or
                                     "pop3s" in dovecot_protocols)
                                 else [])
                              + ([ "dovecot-lmtpd" ]
                                 if "lmtp" in dovecot_protocols
                                 else [])
                              + ([ "dovecot-mysql" ]
                                 if "mysql" in dovecot_user_accounts
                                 else [])
                              + ([ "dovecot-pgsql" ]
                                 if "pgsql" in dovecot_user_accounts
                                 else [])
                              + ([ "dovecot-sqlite" ]
                                 if "sqlite" in dovecot_user_accounts
                                 else [])
                              + ([ "dovecot-ldap" ]
                                 if "ldap" in dovecot_user_accounts
                                 else [])
                              + ([ "dovecot-managesieved" ]
                                 if "managesieve" in dovecot_protocols
                                 else []))) }}'
    state: 'present'
  register: dovecot__register_packages
  until: dovecot__register_packages is succeeded

- name: Make sure that Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    mode: '0755'

- name: Save Dovecot local facts
  template:
    src: 'etc/ansible/facts.d/dovecot.fact.j2'
    dest: '/etc/ansible/facts.d/dovecot.fact'
    mode: '0755'
  notify: [ 'Refresh host facts' ]

- name: Update Ansible facts if they were modified
  meta: 'flush_handlers'

- name: Divert original Dovecot main configuration file
  command: dpkg-divert --quiet --local
           --divert /etc/dovecot/dovecot.conf.dpkg-divert
           --rename /etc/dovecot/dovecot.conf
  args:
    creates: /etc/dovecot/dovecot.conf.dpkg-divert
  notify: [ 'Restart dovecot' ]
  tags: [ "role::dovecot:conf" ]

- name: Generate Dovecot main configuration file
  template:
    src: '{{ lookup("template_src", "etc/dovecot/dovecot.conf.j2") }}'
    dest: '/etc/dovecot/dovecot.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart dovecot' ]
  tags: [ "role::dovecot:conf" ]

- name: Remove old diversions
  shell: set -o nounset -o pipefail -o errexit &&
         rm -f /etc/dovecot/conf.d/{{ item }} ;
         dpkg-divert --quiet --local --rename --remove /etc/dovecot/conf.d/{{ item }}
  args:
    warn: False
    executable: 'bash'
    removes: '/etc/dovecot/conf.d/{{ item }}.dpkg-divert'
  with_flattened:
    - [ '10-mail.conf', '10-ssl.conf', '15-lda.conf' ]
    - [ '20-pop3.conf', '20-imap.conf', '20-lmtp.conf' ]
    - [ '20-managesieve.conf', '90-sieve.conf', '90-sieve-extprograms.conf' ]

- name: Divert original Dovecot configuration
  command: dpkg-divert --quiet --local
           --divert /etc/dovecot/conf.d/{{ item }}.dpkg-divert
           --rename /etc/dovecot/conf.d/{{ item }}
           creates=/etc/dovecot/conf.d/{{ item }}.dpkg-divert
  with_flattened:
    - [ '10-auth.conf', '10-master.conf' ]
    - [ '{{ "auth-deny.conf.ext" if "deny" in dovecot_user_accounts else [] }}' ]
    - [ '{{ "auth-system.conf.ext" if "system" in dovecot_user_accounts else [] }}' ]
    - [ '{{ "auth-sql.conf.ext" if "sql" in dovecot_user_accounts else [] }}' ]
    - [ '{{ "auth-ldap.conf.ext" if "ldap" in dovecot_user_accounts else [] }}' ]
    - [ '{{ "auth-checkpassword.conf.ext" if "checkpassword" in dovecot_user_accounts else [] }}' ]
  notify: [ 'Restart dovecot' ]

- name: Uninstall disabled Dovecot protocols
  package:
    pkg: '{{ q("flattened", (([ "dovecot-imapd" ]
                              if ("imap" not in dovecot_protocols and
                                  "imaps" not in dovecot_protocols)
                              else [])
                             + ([ "dovecot-pop3d" ]
                                if ("pop3" not in dovecot_protocols and
                                    "pop3s" not in dovecot_protocols)
                                else [])
                             + ([ "dovecot-lmtpd" ]
                                if "lmtp" not in dovecot_protocols
                                else [])
                             + ([ "dovecot-mysql" ]
                                 if "mysql" not in dovecot_user_accounts
                                 else [])
                             + ([ "dovecot-pgsql" ]
                                if "pgsql" not in dovecot_user_accounts
                                else [])
                             + ([ "dovecot-sqlite" ]
                                if "sqlite" not in dovecot_user_accounts
                                else [])
                             + ([ "dovecot-ldap" ]
                                if ("ldap" not in dovecot_user_accounts)
                                else [])
                             + ([ "dovecot-managesieved" ]
                                if "managesieve" not in dovecot_protocols
                                else []))) }}'
    state: 'absent'
  notify: [ 'Restart dovecot' ]

- name: Generate Dovecot configuration
  template:
    src: '{{ lookup("debops.debops.template_src", "etc/dovecot/conf.d/" + item + ".j2") }}'
    dest: '/etc/dovecot/conf.d/{{ item }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_flattened:
    - [ '10-auth.conf', '10-master.conf' ]
    - [ '{{ "auth-deny.conf.ext" if "deny" in dovecot_user_accounts else [] }}' ]
    - [ '{{ "auth-system.conf.ext" if "system" in dovecot_user_accounts else [] }}' ]
    - [ '{{ "auth-sql.conf.ext" if (dovecot_user_accounts | d([]) | intersect(["mysql", "pgsql", "sqlite"])) else [] }}' ]
    - [ '{{ "auth-ldap.conf.ext" if "ldap" in dovecot_user_accounts else [] }}' ]
    - [ '{{ "auth-passwdfile.conf.ext" if "passwdfile" in dovecot_user_accounts else [] }}' ]
    - [ '{{ "auth-checkpassword.conf.ext" if "checkpassword" in dovecot_user_accounts else [] }}' ]
  notify: [ 'Restart dovecot' ]
  tags: [ "role::dovecot:conf" ]

- name: Generate Dovecot local configuration
  template:
    src: "{{ lookup('debops.debops.template_src', 'etc/dovecot/local.conf.j2') }}"
    dest: '/etc/dovecot/local.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart dovecot' ]
  tags: [ "role::dovecot:conf" ]

- name: Generate Dovecot sql configuration
  template:
    src: "{{ lookup('debops.debops.template_src', 'etc/dovecot/dovecot-sql.conf.ext.j2') }}"
    dest: '/etc/dovecot/dovecot-sql.conf.ext'
    owner: 'root'
    group: 'root'
    mode: '0600'
  notify: [ 'Restart dovecot' ]
  when: "dovecot_user_accounts | d([]) | intersect(['mysql', 'pgsql', 'sqlite'])"
  tags: [ "role::dovecot:conf", "role::dovecot:conf:sql" ]

- name: Generate Dovecot ldap configuration
  template:
    src: "{{ lookup('debops.debops.template_src', 'etc/dovecot/' + item + '.j2') }}"
    dest: '/etc/dovecot/{{ item }}'
    owner: 'root'
    group: 'root'
    mode: '0600'
  notify: [ 'Restart dovecot' ]
  loop:
    - 'dovecot-ldap-userdb.conf'
    - 'dovecot-ldap-passdb.conf'
  when: "'ldap' in dovecot_user_accounts"
  tags: [ "role::dovecot:conf", "role::dovecot:conf:ldap" ]

- name: Generate Dovecot deny user list
  template:
    src: "{{ lookup('debops.debops.template_src', 'etc/dovecot/dovecot.deny.j2') }}"
    dest: '/etc/dovecot/dovecot.deny'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: Create private directory to store passwdfile
  file:
    path: "{{ dovecot_passwdfile_path }}"
    state: directory
    owner: 'root'
    group: 'dovecot'
    mode: '0650'
  when: "'passwdfile' in dovecot_user_accounts"

- name: Create group used in passwdfile
  user:
    name: "{{ dovecot_passwdfile_gid }}"
    system: yes
  when: "'passwdfile' in dovecot_user_accounts"

- name: Create user used in passwdfile
  user:
    name: "{{ dovecot_passwdfile_uid }}"
    group: "{{ dovecot_passwdfile_gid }}"
    home: "{{ dovecot_passwdfile_home }}"
    shell: "/usr/sbin/nologin"
    system: yes
  when: "'passwdfile' in dovecot_user_accounts"

- name: Make sure that PKI hook directory exists
  file:
    path: '{{ dovecot_pki_hook_path }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'
  when: dovecot_pki|bool

- name: Manage PKI postfix hook
  template:
    src: 'etc/pki/hooks/dovecot.j2'
    dest: '{{ dovecot_pki_hook_path + "/" + dovecot_pki_hook_name }}'
    owner: 'root'
    group: 'root'
    mode: '0755'
  when: dovecot_pki|bool

- name: Ensure the PKI postfix hook is absent
  file:
    path: '{{ dovecot_pki_hook_path }}'
    state: 'absent'
  when: not (dovecot_pki|bool)

- name: Post hooks
  include: "{{ lookup('debops.debops.task_src', 'dovecot/post_main.yml') }}"
