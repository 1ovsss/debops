---
# Copyright (C) 2021-2022 Berkhan Berkdemir <berkhan@tekdanisman.com>
# Copyright (C) 2015-2022 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

# .. _miniflux__ref_defaults:

# debops.miniflux default variables [[[
# ===================================

# .. contents:: Sections
#    :local:
#
# .. include:: ../../../../includes/global.rst


# Domain name configuration [[[
# -----------------------------

# .. envvar:: miniflux__domain [[[
#
# The DNS domain used by other variables in the ``debops.miniflux``
# role.
miniflux__domain: '{{ ansible_domain }}'

                                                                   # ]]]
# .. envvar:: miniflux__fqdn [[[
#
# String of the Fully Qualified domain names on which the Miniflux
# application will be available, used by the webserver.
miniflux__fqdn: 'miniflux.{{ miniflux__domain }}'

                                                                   # ]]]
                                                                   # ]]]
# Application user, group, home [[[
# ---------------------------------

# .. envvar:: miniflux__user [[[
#
# Name of the UNIX system account used by the Miniflux service.
miniflux__user: 'miniflux'

                                                                   # ]]]
# .. envvar:: miniflux__group [[[
#
# Name of the UNIX system group used by the Miniflux service.
miniflux__group: 'miniflux'

                                                                   # ]]]
# .. envvar:: miniflux__shell [[[
#
# The default shell set on the Miniflux account.
miniflux__shell: '/usr/sbin/nologin'
                                                                   # ]]]
                                                                   # ]]]
# Directory paths [[[
# -------------------

# .. envvar:: miniflux__home [[[
#
# The Miniflux account home directory.
miniflux__home: '{{ (ansible_local.fhs.home | d("/var/local"))
                 + "/" + miniflux__user }}'

                                                                   # ]]]
                                                                   # ]]]
# PostgreSQL database configuration [[[
# -------------------------------------

# The Miniflux database configuration is managed by the
# :ref:`debops.postgresql` Ansible role. See its documentation for
# details about the default variable values used in the Miniflux role.

# .. envvar:: miniflux__database_host [[[
#
# The hostname or IP address of the PostgreSQL database server to use
# for the Miniflux database.
miniflux__database_host: '{{ ansible_local.postgresql.server|d("localhost") }}'

                                                                   # ]]]
# .. envvar:: miniflux__database_port [[[
#
# The TCP port of the PostgreSQL database server which should be used by
# Miniflux.
miniflux__database_port: '{{ ansible_local.postgresql.port|d("5432") }}'

                                                                   # ]]]
# .. envvar:: miniflux__database_name [[[
#
# Name of the PostgreSQL database and its corresponding role used by
# Miniflux. This role won't be able to login to the database server
# directly.
miniflux__database_name: 'miniflux_production'

                                                                   # ]]]
# .. envvar:: miniflux__database_user [[[
#
# Name of the PostgreSQL role used by Miniflux. This role will be able
# to login to the PostgreSQL server and access the Miniflux database.
miniflux__database_user: 'miniflux'

                                                                   # ]]]
# .. envvar:: miniflux__database_password [[[
#
# Autogenerated password to the Miniflux PostgreSQL user role.
miniflux__database_password: '{{ lookup("password", secret + "/postgresql/" +
                                    (ansible_local.postgresql.delegate_to|d("localhost")) + "/" +
                                    (ansible_local.postgresql.port|d("5432")) + "/credentials/" +
                                    miniflux__database_user + "/password") }}'

                                                                   # ]]]
                                                                   # ]]]
# Go application deployment [[[
# -----------------------------

# These variables control how the :command:`miniflux` binary is installed on
# the host. The installation is performed by the :ref:`debops.golang`
# role, refer to its documentation for details. The installation
# definition can be found in the
# :envvar:`miniflux__golang__dependent_packages` variable.

# .. envvar:: miniflux__upstream_gpg_key [[[
#
# The fingerprint of the GPG key which is used to sign the Miniflux
# releases. It will be used to verify the downloaded signature file as
# well as the :command:`git` tags in the source repository.
miniflux__upstream_gpg_key: '4405 F3F0 DDBA 1B9E 68A3  1D25 12C7 4390 F9AA C728'

                                                                   # ]]]
# .. envvar:: miniflux__upstream_type [[[
#
# Specify the method which should be used to install Miniflux binary.
# Either ``url`` to download the configured binary directly and verify
# it using the specified GPG key, or ``git`` to clone the Miniflux
# :command:`git` repository and build the specified version from source.
miniflux__upstream_type: 'url'

                                                                   # ]]]
# .. envvar:: miniflux__upstream_upgrade [[[
#
# Enable or disable automatic upgrades of Miniflux downloaded from
# upstream. This does not affect installations built from the
# :command:`git` repository.
#
# Miniflux is updated quite freqently. Remember that already downloaded
# Miniflux releases are not removed automatically; check the download
# directory (by default
# :file:`/var/local/_golang/go/src/releases/linux-amd64/mc/` directory)
# and remove old releases.
miniflux__upstream_upgrade: False

                                                                   # ]]]
# .. envvar:: miniflux__upstream_url_mirror [[[
#
# The base URL of the Miniflux download page, should end with the ``/``
# character.
miniflux__upstream_url_mirror: 'https://github.com/miniflux/v2/releases/'

                                                                   # ]]]
# .. envvar:: miniflux__upstream_platform [[[
#
# Specify the OS type and platform architecture to use for installation.
# The list of supported architectures and OS types can be found on the
# https://github.com/miniflux/v2/releases/ page.
miniflux__upstream_platform: 'linux-amd64'

                                                                   # ]]]
                                                                   # ]]]
# Configuration variables for other Ansible roles [[[
# ---------------------------------------------------

# .. envvar:: miniflux__postgresql__dependent_roles [[[
#
# Role configuration for the :ref:`debops.postgresql` Ansible role.
miniflux__postgresql__dependent_roles:

  - name: '{{ miniflux__database_user }}'

  - name: '{{ miniflux__database_name }}'
    flags: [ 'NOLOGIN' ]

                                                                   # ]]]
# .. envvar:: miniflux__postgresql__dependent_groups [[[
#
# Group configuration for the :ref:`debops.postgresql` Ansible role.
miniflux__postgresql__dependent_groups:

  - roles: [ '{{ miniflux__database_user }}' ]
    groups: [ '{{ miniflux__database_name }}' ]
    database: '{{ miniflux__database_name }}'

                                                                   # ]]]
# .. envvar:: miniflux__postgresql__dependent_databases [[[
#
# Database configuration for the :ref:`debops.postgresql` Ansible role.
miniflux__postgresql__dependent_databases:

  - name: '{{ miniflux__database_name }}'
    owner: '{{ miniflux__database_name }}'

                                                                   # ]]]
# .. envvar:: miniflux__postgresql__dependent_pgpass [[[
#
# ``~/.pgpass`` configuration for the :ref:`debops.postgresql` Ansible
# role.
miniflux__postgresql__dependent_pgpass:

  - owner: '{{ miniflux__user }}'
    group: '{{ miniflux__group }}'
    home: '{{ miniflux__home }}'
    system: True

                                                                   # ]]]
# .. envvar:: miniflux__postgresql__dependent_extensions [[[
#
# Configuration of PostgreSQL extensions for the
# :ref:`debops.postgresql` Ansible role.
miniflux__postgresql__dependent_extensions:

  - database: '{{ miniflux__database_name }}'
    extension: 'hstore'

                                                                   # ]]]
# .. envvar:: miniflux__golang__dependent_packages [[[
#
# Configuration for the :ref:`debops.golang` Ansible role.
miniflux__golang__dependent_packages:

  - name: 'miniflux'
    upstream_type: '{{ miniflux__upstream_type }}'
    url:
      - src: '{{ miniflux__upstream_url_mirror + "download/2.0.35/miniflux-" + miniflux__upstream_platform }}'
        dest: 'releases/{{ miniflux__upstream_platform }}/miniflux/miniflux/2.0.35/miniflux_2.0.35_linux_amd64'
    url_binaries:
      - src: 'releases/{{ miniflux__upstream_platform }}/miniflux/miniflux/2.0.35/miniflux_2.0.35_linux_amd64'
        dest: 'miniflux'
        notify: [ 'Restart miniflux' ]

                                                                   # ]]]
# .. envvar:: miniflux__nginx__dependent_upstreams [[[
#
# Upstream configuration for the :ref:`debops.nginx` Ansible role.
miniflux__nginx__dependent_upstreams:

  - name: 'miniflux-upstream'
    server: '{{ miniflux__bind }}:{{ miniflux__port }}'

                                                                   # ]]]
# .. envvar:: miniflux__nginx__dependent_servers [[[
#
# Server configuration for the :ref:`debops.nginx` Ansible role.
miniflux__nginx__dependent_servers:

  - name: '{{ miniflux__fqdn }}'
    by_role: 'debops.miniflux'
    filename: 'debops.miniflux'
    type: 'proxy'
    proxy_location: '/'
    proxy_headers: True
    proxy_options: |
      proxy_redirect off;
    proxy_pass: 'http://miniflux-upstream'

                                                                   # ]]]
# .. envvar:: miniflux__etc_services__dependent_list [[[
#
# Configuration for the :ref:`debops.etc_services` Ansible role.
miniflux__etc_services__dependent_list:

  - name: 'miniflux'
    port: '{{ miniflux__port }}'

                                                                   # ]]]
                                                                   # ]]]
                                                                   # ]]]

# TODO: Create documentation for these used variables
#
miniflux__comment: 'Miniflux'
miniflux__bind: '127.0.0.1'
miniflux__port: '3366'
